# generated by datamodel-codegen:
#   filename:  public.yaml
#   timestamp: 2025-08-01T17:33:59+00:00

from __future__ import annotations

from datetime import datetime
from typing import Annotated

from pydantic import AnyUrl, BaseModel, EmailStr, Field


class User(BaseModel):
    """
    Serializer for User model.
    """

    id: int
    username: Annotated[str, Field(max_length=150, pattern='^[\\w.@+-]+$')]
    """
    Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
    """
    email: Annotated[EmailStr | None, Field(max_length=254, title='Email address')] = (
        None
    )
    first_name: Annotated[str | None, Field(max_length=150)] = None
    last_name: Annotated[str | None, Field(max_length=150)] = None
    date_joined: datetime


class PatchedPost(BaseModel):
    """
    Serializer for Post model.
    """

    id: int | None = None
    title: Annotated[str | None, Field(max_length=200)] = None
    content: str | None = None
    author: User | None = None
    author_id: int | None = None
    published: bool | None = None
    created_at: datetime | None = None


class Post(BaseModel):
    """
    Serializer for Post model.
    """

    id: int
    title: Annotated[str, Field(max_length=200)]
    content: str
    author: User
    author_id: int
    published: bool | None = None
    created_at: datetime


class PaginatedPostList(BaseModel):
    count: Annotated[int, Field(examples=[123])]
    next: Annotated[
        AnyUrl | None, Field(examples=['http://api.example.org/accounts/?page=4'])
    ] = None
    previous: Annotated[
        AnyUrl | None, Field(examples=['http://api.example.org/accounts/?page=2'])
    ] = None
    results: list[Post]
