// This file is auto-generated by @hey-api/openapi-ts

export type PaginatedPostListReadable = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<PostReadable>;
};

export type PaginatedPostListWritable = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<PostWritable>;
};

/**
 * Serializer for Post model.
 */
export type PatchedPostReadable = {
  readonly id?: number;
  title?: string;
  content?: string;
  author?: UserReadable;
  published?: boolean;
  readonly created_at?: string;
};

/**
 * Serializer for Post model.
 */
export type PatchedPostWritable = {
  title?: string;
  content?: string;
  author?: UserWritable;
  author_id?: number;
  published?: boolean;
};

/**
 * Serializer for Post model.
 */
export type PostReadable = {
  readonly id: number;
  title: string;
  content: string;
  author: UserReadable;
  published?: boolean;
  readonly created_at: string;
};

/**
 * Serializer for Post model.
 */
export type PostWritable = {
  title: string;
  content: string;
  author: UserWritable;
  author_id: number;
  published?: boolean;
};

/**
 * Serializer for User model.
 */
export type UserReadable = {
  readonly id: number;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  /**
   * Email address
   */
  email?: string;
  first_name?: string;
  last_name?: string;
  readonly date_joined: string;
};

/**
 * Serializer for User model.
 */
export type UserWritable = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  /**
   * Email address
   */
  email?: string;
  first_name?: string;
  last_name?: string;
};

export type ApiPublicApiPostsListData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string;
    /**
     * A page number within the paginated result set.
     */
    page?: number;
    /**
     * A search term.
     */
    search?: string;
  };
  url: "/api/public_api/posts/";
};

export type ApiPublicApiPostsListResponses = {
  200: PaginatedPostListReadable;
};

export type ApiPublicApiPostsListResponse =
  ApiPublicApiPostsListResponses[keyof ApiPublicApiPostsListResponses];

export type ApiPublicApiPostsCreateData = {
  body: PostWritable;
  path?: never;
  query?: never;
  url: "/api/public_api/posts/";
};

export type ApiPublicApiPostsCreateResponses = {
  201: PostReadable;
};

export type ApiPublicApiPostsCreateResponse =
  ApiPublicApiPostsCreateResponses[keyof ApiPublicApiPostsCreateResponses];

export type ApiPublicApiPostsDestroyData = {
  body?: never;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/";
};

export type ApiPublicApiPostsDestroyResponses = {
  /**
   * No response body
   */
  204: void;
};

export type ApiPublicApiPostsDestroyResponse =
  ApiPublicApiPostsDestroyResponses[keyof ApiPublicApiPostsDestroyResponses];

export type ApiPublicApiPostsRetrieveData = {
  body?: never;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/";
};

export type ApiPublicApiPostsRetrieveResponses = {
  200: PostReadable;
};

export type ApiPublicApiPostsRetrieveResponse =
  ApiPublicApiPostsRetrieveResponses[keyof ApiPublicApiPostsRetrieveResponses];

export type ApiPublicApiPostsPartialUpdateData = {
  body?: PatchedPostWritable;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/";
};

export type ApiPublicApiPostsPartialUpdateResponses = {
  200: PostReadable;
};

export type ApiPublicApiPostsPartialUpdateResponse =
  ApiPublicApiPostsPartialUpdateResponses[keyof ApiPublicApiPostsPartialUpdateResponses];

export type ApiPublicApiPostsUpdateData = {
  body: PostWritable;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/";
};

export type ApiPublicApiPostsUpdateResponses = {
  200: PostReadable;
};

export type ApiPublicApiPostsUpdateResponse =
  ApiPublicApiPostsUpdateResponses[keyof ApiPublicApiPostsUpdateResponses];

export type ApiPublicApiPostsPublishCreateData = {
  body: PostWritable;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/publish/";
};

export type ApiPublicApiPostsPublishCreateResponses = {
  200: PostReadable;
};

export type ApiPublicApiPostsPublishCreateResponse =
  ApiPublicApiPostsPublishCreateResponses[keyof ApiPublicApiPostsPublishCreateResponses];

export type ApiPublicApiPostsUnpublishCreateData = {
  body: PostWritable;
  path: {
    /**
     * A unique integer value identifying this post.
     */
    id: number;
  };
  query?: never;
  url: "/api/public_api/posts/{id}/unpublish/";
};

export type ApiPublicApiPostsUnpublishCreateResponses = {
  200: PostReadable;
};

export type ApiPublicApiPostsUnpublishCreateResponse =
  ApiPublicApiPostsUnpublishCreateResponses[keyof ApiPublicApiPostsUnpublishCreateResponses];

export type ApiPublicApiPostsByAuthorListData = {
  body?: never;
  path?: never;
  query?: {
    author_id?: number;
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string;
    /**
     * A page number within the paginated result set.
     */
    page?: number;
    /**
     * A search term.
     */
    search?: string;
  };
  url: "/api/public_api/posts/by_author/";
};

export type ApiPublicApiPostsByAuthorListResponses = {
  200: PaginatedPostListReadable;
};

export type ApiPublicApiPostsByAuthorListResponse =
  ApiPublicApiPostsByAuthorListResponses[keyof ApiPublicApiPostsByAuthorListResponses];

export type ApiPublicApiPostsPublishedListData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string;
    /**
     * A page number within the paginated result set.
     */
    page?: number;
    /**
     * A search term.
     */
    search?: string;
  };
  url: "/api/public_api/posts/published/";
};

export type ApiPublicApiPostsPublishedListResponses = {
  200: PaginatedPostListReadable;
};

export type ApiPublicApiPostsPublishedListResponse =
  ApiPublicApiPostsPublishedListResponses[keyof ApiPublicApiPostsPublishedListResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
