// This file is auto-generated by @hey-api/openapi-ts

export type PaginatedUserProfileListReadable = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<UserProfileReadable>;
};

export type PaginatedUserProfileListWritable = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<UserProfileWritable>;
};

/**
 * Serializer for user profile with minimal fields.
 */
export type PatchedUserProfileReadable = {
  readonly id?: number;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  readonly username?: string;
  /**
   * Email address
   */
  readonly email?: string;
  first_name?: string;
  last_name?: string;
  readonly full_name?: string;
  readonly display_name?: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  website?: string;
  location?: string;
  /**
   * Verified
   */
  readonly is_verified?: boolean;
  readonly date_joined?: string;
};

/**
 * Serializer for user profile with minimal fields.
 */
export type PatchedUserProfileWritable = {
  first_name?: string;
  last_name?: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  website?: string;
  location?: string;
};

export type TokenRefreshReadable = {
  readonly access: string;
};

export type TokenRefreshWritable = {
  refresh: string;
};

/**
 * Serializer for user registration.
 */
export type UserCreateReadable = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  /**
   * Email address
   */
  email?: string;
  first_name?: string;
  last_name?: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  date_of_birth?: string | null;
  website?: string;
  location?: string;
  email_notifications?: boolean;
  newsletter_subscription?: boolean;
};

/**
 * Serializer for user registration.
 */
export type UserCreateWritable = {
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  username: string;
  /**
   * Email address
   */
  email?: string;
  password: string;
  password_confirm: string;
  first_name?: string;
  last_name?: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  date_of_birth?: string | null;
  website?: string;
  location?: string;
  email_notifications?: boolean;
  newsletter_subscription?: boolean;
};

/**
 * Serializer for user profile with minimal fields.
 */
export type UserProfileReadable = {
  readonly id: number;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   */
  readonly username: string;
  /**
   * Email address
   */
  readonly email: string;
  first_name?: string;
  last_name?: string;
  readonly full_name: string;
  readonly display_name: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  website?: string;
  location?: string;
  /**
   * Verified
   */
  readonly is_verified: boolean;
  readonly date_joined: string;
};

/**
 * Serializer for user profile with minimal fields.
 */
export type UserProfileWritable = {
  first_name?: string;
  last_name?: string;
  bio?: string;
  /**
   * Avatar URL
   */
  avatar?: string;
  phone?: string;
  website?: string;
  location?: string;
};

export type RootRetrieveData = {
  body?: never;
  path: {
    username: string;
  };
  query?: never;
  url: "/api/users/{username}/";
};

export type RootRetrieveResponses = {
  200: UserProfileReadable;
};

export type RootRetrieveResponse =
  RootRetrieveResponses[keyof RootRetrieveResponses];

export type AuthLoginCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/login/";
};

export type AuthLoginCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthLogoutCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/logout/";
};

export type AuthLogoutCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthPasswordChangeCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/password/change/";
};

export type AuthPasswordChangeCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthPasswordResetCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/password/reset/";
};

export type AuthPasswordResetCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthPasswordResetConfirmCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/password/reset/confirm/";
};

export type AuthPasswordResetConfirmCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthRefreshCreateData = {
  body: TokenRefreshWritable;
  path?: never;
  query?: never;
  url: "/api/users/auth/refresh/";
};

export type AuthRefreshCreateResponses = {
  200: TokenRefreshReadable;
};

export type AuthRefreshCreateResponse =
  AuthRefreshCreateResponses[keyof AuthRefreshCreateResponses];

export type AuthRefreshTokenCreateData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/auth/refresh-token/";
};

export type AuthRefreshTokenCreateResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type AuthRegisterCreateData = {
  body: UserCreateWritable;
  path?: never;
  query?: never;
  url: "/api/users/auth/register/";
};

export type AuthRegisterCreateResponses = {
  201: UserCreateReadable;
};

export type AuthRegisterCreateResponse =
  AuthRegisterCreateResponses[keyof AuthRegisterCreateResponses];

export type ListListData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Which field to use when ordering the results.
     */
    ordering?: string;
    /**
     * A page number within the paginated result set.
     */
    page?: number;
    /**
     * A search term.
     */
    search?: string;
  };
  url: "/api/users/list/";
};

export type ListListResponses = {
  200: PaginatedUserProfileListReadable;
};

export type ListListResponse = ListListResponses[keyof ListListResponses];

export type MeRetrieveData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/me/";
};

export type MeRetrieveResponses = {
  /**
   * No response body
   */
  200: unknown;
};

export type ProfileRetrieveData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/profile/";
};

export type ProfileRetrieveResponses = {
  200: UserProfileReadable;
};

export type ProfileRetrieveResponse =
  ProfileRetrieveResponses[keyof ProfileRetrieveResponses];

export type ProfilePartialUpdateData = {
  body?: PatchedUserProfileWritable;
  path?: never;
  query?: never;
  url: "/api/users/profile/";
};

export type ProfilePartialUpdateResponses = {
  200: UserProfileReadable;
};

export type ProfilePartialUpdateResponse =
  ProfilePartialUpdateResponses[keyof ProfilePartialUpdateResponses];

export type ProfileUpdateData = {
  body?: UserProfileWritable;
  path?: never;
  query?: never;
  url: "/api/users/profile/";
};

export type ProfileUpdateResponses = {
  200: UserProfileReadable;
};

export type ProfileUpdateResponse =
  ProfileUpdateResponses[keyof ProfileUpdateResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
