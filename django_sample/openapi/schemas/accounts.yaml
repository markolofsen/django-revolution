openapi: 3.0.3
info:
  title: ''
  version: 0.0.0 (v1)
paths:
  /api/users/{username}/:
    get:
      operationId: root_retrieve
      description: Public user profile view.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/users/auth/login/:
    post:
      operationId: auth_login_create
      description: Authenticate user and return tokens.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/auth/logout/:
    post:
      operationId: auth_logout_create
      description: Logout user and blacklist tokens.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: Change user password.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: Request password reset.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Confirm password reset.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/auth/refresh-token/:
    post:
      operationId: auth_refresh_token_create
      description: Refresh access token.
      tags:
      - auth
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/auth/register/:
    post:
      operationId: auth_register_create
      description: User registration view.
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/list/:
    get:
      operationId: list_list
      description: List users view (public).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - list
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /api/users/me/:
    get:
      operationId: me_retrieve
      description: Get current user info.
      tags:
      - me
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/profile/:
    get:
      operationId: profile_retrieve
      description: User profile view.
      tags:
      - profile
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: profile_update
      description: User profile view.
      tags:
      - profile
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: profile_partial_update
      description: User profile view.
      tags:
      - profile
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
components:
  schemas:
    PaginatedUserProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedUserProfile:
      type: object
      description: Serializer for user profile with minimal fields.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        bio:
          type: string
          maxLength: 500
        avatar:
          type: string
          format: uri
          title: Avatar URL
          maxLength: 200
        phone:
          type: string
          maxLength: 20
        website:
          type: string
          format: uri
          maxLength: 200
        location:
          type: string
          maxLength: 100
        is_verified:
          type: boolean
          readOnly: true
          title: Verified
        date_joined:
          type: string
          format: date-time
          readOnly: true
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserCreate:
      type: object
      description: Serializer for user registration.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 500
        avatar:
          type: string
          format: uri
          title: Avatar URL
          maxLength: 200
        phone:
          type: string
          maxLength: 20
        date_of_birth:
          type: string
          format: date
          nullable: true
        website:
          type: string
          format: uri
          maxLength: 200
        location:
          type: string
          maxLength: 100
        email_notifications:
          type: boolean
        newsletter_subscription:
          type: boolean
      required:
      - password
      - password_confirm
      - username
    UserProfile:
      type: object
      description: Serializer for user profile with minimal fields.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        bio:
          type: string
          maxLength: 500
        avatar:
          type: string
          format: uri
          title: Avatar URL
          maxLength: 200
        phone:
          type: string
          maxLength: 20
        website:
          type: string
          format: uri
          maxLength: 200
        location:
          type: string
          maxLength: 100
        is_verified:
          type: boolean
          readOnly: true
          title: Verified
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - display_name
      - email
      - full_name
      - id
      - is_verified
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
